services:
  ecommerce-app:
    build:
      context: ./ecommerce-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_PROXY_URL=http://ecommerce-proxy:8080
      - NEXT_PUBLIC_CHECKOUT_APP_URL=http://ecommerce-proxy:8080/checkout
    volumes:
      - ./ecommerce-app:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - app-network

  checkout-app:
    build:
      context: ./checkout-app
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_MAIN_APP_URL=http://ecommerce-proxy:8080
      - NEXT_PUBLIC_PROXY_URL=http://ecommerce-proxy:8080
      - NEXT_PUBLIC_CHECKOUT_URL=http://ecommerce-proxy:8080/checkout
    volumes:
      - ./checkout-app:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    networks:
      - app-network

  ecommerce-proxy:
    build:
      context: ./ecommerce-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - SESSION_SECRET=your-secret-key
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080,http://ecommerce-app:3000,http://checkout-app:3001
      - NODE_ENV=development
    volumes:
      - ./ecommerce-proxy:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network

networks:
  app-network:
    driver: bridge